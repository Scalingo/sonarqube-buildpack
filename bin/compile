#!/bin/bash

set -e

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
basedir="$( cd -P "$( dirname "$0" )" && pwd )"
BUILDPACK_DIR="$(readlink -f ${basedir}/..)"
source ${BUILDPACK_DIR}/lib/common.sh

if [ -n "$BUILDPACK_DEBUG" ]; then
    set -x
fi

SONARQUBE_EDITION="${SONARQUBE_EDITION:-}"
SONARQUBE_VERSION="${SONARQUBE_VERSION:-8.9.5.50698}"

install_sonarqube() {
  local BUILD_DIR=${1}
  local CACHE_DIR=${2}

  sonarqube_home="${BUILD_DIR}/sonarqube"
  sonarqube_dist="sonarqube-${SONARQUBE_VERSION}"

  if [ "$SONARQUBE_EDITION" = "developer" ] || [ "$SONARQUBE_EDITION" = "enterprise" ] || [ "$SONARQUBE_EDITION" = "datacenter" ]; then
    sonarqube_archive="sonarqube-$SONARQUBE_EDITION-$SONARQUBE_VERSION.zip"
    sonarqube_url="https://binaries.sonarsource.com/CommercialDistribution/sonarqube-$SONARQUBE_EDITION/${sonarqube_archive}"
  else
    sonarqube_archive="sonarqube-$SONARQUBE_VERSION.zip"
    sonarqube_url="https://binaries.sonarsource.com/Distribution/sonarqube/${sonarqube_archive}"
  fi

  if [[ -f "$CACHE_DIR/.sonarqube_version" ]]; then
    old_version=$(cat $CACHE_DIR/.sonarqube_version)
    if [[ $old_version != $SONARQUBE_VERSION ]]; then
      echo "New SonarQube version installation, cleaning the cache for the old version"
      rm -f $CACHE_DIR/$old_version.tar.gz
    fi
  fi

  if [[ ! -f "$CACHE_DIR/$sonarqube_archive" ]]; then
    echo -n "Downloading the SonarQube ${SONARQUBE_VERSION} archive..."
    curl --silent --fail --retry 3 --retry-delay 2 --connect-timeout 3 --max-time 30 --output ${CACHE_DIR}/${sonarqube_archive} "$sonarqube_url"
    echo " done"
    echo $SONARQUBE_VERSION > ${CACHE_DIR}/.sonarqube_version
  else
    echo "Get the SonarQube ${SONARQUBE_VERSION} archive from the cache"
  fi

  echo -n "Checking SonarQube archive checksum..."
  curl --silent --fail --retry 3 --retry-delay 2 --connect-timeout 3 --max-time 30 --output ${CACHE_DIR}/${sonarqube_archive}.sha256 "${sonarqube_url}.sha256"
  if [[ $(sha256sum ${CACHE_DIR}/${sonarqube_archive} | cut -f 1 -d " ") != $(cat ${CACHE_DIR}/${sonarqube_archive}.sha256) ]]; then
    echo 2>&1 "Wrong checksum"
    return 1
  fi
  echo " ok"

  echo -n "Extracting the SonarQube archive..."
  unzip -qq $CACHE_DIR/$sonarqube_archive -d $BUILD_DIR
  mv ${BUILD_DIR}/${sonarqube_dist} $sonarqube_home
  echo " done"

  echo -n "Copying the vendored scripts from the buildpack..."
  # Copy the vendored boot script for launching the WAR
  cp ${BUILDPACK_DIR}/opt/boot.sh ${sonarqube_home}/
  chmod +x ${sonarqube_home}/boot.sh
  echo " done"

  # The folder should exist but we want to make sure it does
  mkdir -p $sonarqube_home/extensions/plugins

  if [ -d $BUILD_DIR/plugins ]; then
    # Copy all JAR files from the plugins folder into the SonarQube dedicated folder
    # https://docs.sonarqube.org/8.6/setup/install-plugin/
    for plugin in $BUILD_DIR/plugins/*.jar; do
      [ -f "$plugin" ] || continue
      echo -n "Installing the plugin $(basename $plugin)..."
      cp $plugin $sonarqube_home/extensions/plugins
      echo " done"
    done
  fi
}

mkdir -p $CACHE_DIR
export_env_dir "$ENV_DIR"

install_sonarqube ${BUILD_DIR} ${CACHE_DIR}
